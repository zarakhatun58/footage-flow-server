// utils/transcriptMock.js
import fs from 'fs';
import path from 'path';
import axios from 'axios';
import dotenv from 'dotenv';
dotenv.config();

export const transcribeAudio = async (filePath) => {
  try {
    const fileName = path.basename(filePath);
    const prompt = `The file "${fileName}" is a video. Simulate a transcript of what a speaker might be saying in an educational or tutorial video. Provide a short summary-like transcript.`;

    const response = await axios.post(
      'https://api.groq.com/openai/v1/chat/completions',
      {
        model: 'meta-llama/llama-4-scout-17b-16e-instruct',
        messages: [
          {
            role: 'system',
            content: 'You are an AI assistant that generates fake but realistic transcripts based on video filenames.'
          },
          {
            role: 'user',
            content: prompt
          }
        ]
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.GROQ_API_KEY}`,
          'Content-Type': 'application/json'
        }
      }
    );

    const transcript = response.data.choices?.[0]?.message?.content?.trim();
    if (transcript) {
      console.log('üß† Transcript generated using Groq API');
      return transcript;
    } else {
      console.error('‚ùå No transcript generated by Groq.');
      return null;
    }
  } catch (error) {
    console.error('‚ùå Error using Groq API:', error.message || error);
    return null;
  }
};
